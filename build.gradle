apply plugin: 'application'

repositories {
    mavenCentral()
}

dependencies {
   implementation group: 'org.json', name: 'json', version: '20200518'
}

//define main class
mainClassName = 'Concentration'

task runTask1(type: JavaExec) {
  group 'server'
  description 'Creates Server socket waits for messages'

  classpath = sourceSets.main.runtimeClasspath

  main = 'taskone.Server'
  standardInput = System.in
  
  // run with arguments e.g.: gradle runServer -Pport=9099 -q --console=plain
  def defaultPort = 8000
  args project.hasProperty('port') ? project.getProperty('port') : defaultPort
}

task runClient(type: JavaExec) {
  group 'client'
  description 'Creates client socket sends a message to the server'

  classpath = sourceSets.main.runtimeClasspath
  standardInput = System.in

  main = 'taskone.Client'
  standardInput = System.in
  
  // run with arguments e.g.: gradle runClient -Phost=localhost -Pport=9099 -q --console=plain
  def defaultHost = "localhost"
  def defaultPort = 8000
  args project.hasProperty('host') ? project.getProperty('host') : defaultHost,
          project.hasProperty('port') ? project.getProperty('port') : defaultPort
}

task runTask2(type: JavaExec) {
  group 'server'
  description 'Creates Server socket waits for messages with threads'

  classpath = sourceSets.main.runtimeClasspath

  main = 'taskone.ThreadedServer'
  standardInput = System.in

  // run with arguments e.g.: gradle runServerThreaded -Pport=9099 -q --console=plain
  def defaultPort = 8000
  args project.hasProperty('port') ? project.getProperty('port') : defaultPort
}

task runTask3(type: JavaExec) {
  group 'server'
  description 'Creates Server socket waits for messages with threads and thread pool'

  classpath = sourceSets.main.runtimeClasspath

  main = 'taskone.ThreadPoolServer'
  standardInput = System.in

  // run with arguments e.g.: gradle runTask3 -Pport=9099 -PmaxConnections=5 -q --console=plain
  def defaultPort = 8000
  def defaultMaxConnections = 5
  args project.hasProperty('port') ? project.getProperty('port') : defaultPort,
          project.hasProperty('maxConnections') ? project.getProperty('maxConnections') : defaultMaxConnections
}

